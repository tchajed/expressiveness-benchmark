{"task": "average_adjacent", "language": "python-imperative", "plan": {"order": [{"line": 5, "start": 2, "end": 36}], "pair adjacent": [{"line": 7, "start": 2, "end": 24}, {"line": 8, "start": 2, "end": 13}, {"line": 9, "start": 2, "end": 24}, {"line": 10, "start": 4, "end": 44}, {"line": 6, "start": 2, "end": 40}, {"line": 12, "start": 4, "end": 24}, {"line": 13, "start": 2, "end": 15}], "average": [{"line": 1, "start": 2, "end": 20}, {"line": 2, "start": 4, "end": 13}, {"line": 3, "start": 2, "end": 20}, {"line": 4, "start": 4, "end": 25}, {"line": 11, "start": 4, "end": 62}]}, "source": "def average_adjacent(data):\n  if len(data) == 0:\n    return []\n  if len(data) == 1:\n    return [data[0][\"x\"]]\n  data.sort(key=lambda v: v[\"time\"])\n  previous, current = None, data[0][\"x\"]\n  time = data[0][\"time\"]\n  result = []\n  for value in data[1:]:\n    previous = current; current = value[\"x\"]\n    result.append({\"time\": time, \"x\": (previous + current)/2})\n    time = value[\"time\"]\n  return result", "author": "scott", "implementation": ""}