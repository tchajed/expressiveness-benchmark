{"task": "average_adjacent", "language": "python-functional", "plan": {"order": [{"line": 1, "start": 0, "end": 48}], "pair adjacent": [{"line": 2, "start": 2, "end": 10}, {"line": 3, "start": 4, "end": 23}, {"line": 5, "start": 0, "end": 43}, {"line": 6, "start": 2, "end": 3}], "average": [{"line": 4, "start": 0, "end": 35}]}, "source": "def average_adjacent(data):\n  data = sorted(data, key=lambda v: v[\"time\"])\n  return [\n    {\"time\": v[\"time\"],\n     \"x\": (v[\"x\"] + next[\"x\"]) / 2}\n    for next, v in zip(data[1:], data[:-1])\n  ]", "author": "scott", "implementation": ""}