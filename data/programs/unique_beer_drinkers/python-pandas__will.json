{"task": "unique_beer_drinkers", "language": "python-pandas", "plan": {"iter": [{"line": 1, "start": 22, "end": 27}, {"line": 2, "start": 4, "end": 20}, {"line": 1, "start": 2, "end": 22}, {"line": 11, "start": 1, "end": 37}, {"line": 12, "start": 52, "end": 53}, {"line": 13, "start": 2, "end": 38}], "collect": [{"line": 3, "start": 4, "end": 27}, {"line": 4, "start": 4, "end": 18}, {"line": 1, "start": 2, "end": 22}], "compare": [{"line": 6, "start": 2, "end": 28}, {"line": 7, "start": 4, "end": 36}, {"line": 8, "start": 6, "end": 43}, {"line": 9, "start": 4, "end": 55}, {"line": 12, "start": 4, "end": 52}]}, "source": "def unique_beer_drinkers(likes):\n  likes_per_person = (likes\n    .groupby('name')\n    .beer.unique().map(set)\n    .reset_index())\n\n  def check_not_exists(row):\n    other_people = likes_per_person[\n      likes_per_person.name != row['name']]\n    return not (other_people.beer == row['beer']).any()\n  \n  unique_drinkers = likes_per_person[\n    likes_per_person.apply(check_not_exists, axis=1)]\n  return unique_drinkers.name.tolist()", "author": "will", "implementation": ""}