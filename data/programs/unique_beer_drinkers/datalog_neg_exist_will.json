{"task": "unique_beer_drinkers", "language": "datalog", "plan": {"iter": [{"line": 11, "start": 21, "end": 25}, {"line": 12, "start": 2, "end": 17}], "compare": [{"line": 13, "start": 2, "end": 20}, {"line": 4, "start": 0, "end": 27}, {"line": 5, "start": 0, "end": 20}, {"line": 7, "start": 2, "end": 18}, {"line": 8, "start": 2, "end": 16}, {"line": 6, "start": 2, "end": 18}, {"line": 9, "start": 2, "end": 23}, {"line": 1, "start": 0, "end": 16}, {"line": 1, "start": 30, "end": 61}, {"line": 2, "start": 0, "end": 46}, {"line": 0, "start": 0, "end": 32}], "collect": [{"line": 1, "start": 16, "end": 30}, {"line": 2, "start": 46, "end": 60}]}, "source": ".decl differ(a:symbol, b:symbol)\ndiffer(A, B) :- likes(Beer, A), likes(_, B), !likes(Beer, B).\ndiffer(A, B) :- likes(_, A), likes(Beer, B), !likes(Beer, A).\n\n.decl exists_same(a:symbol)\nexists_same(Name) :- \n  likes(_, Other), \n  likes(_, Name), \n  Name != Other, \n  !differ(Name, Other).\n\nunique_beer_drinkers(Name) :- \n  likes(_, Name), \n  !exists_same(Name).", "author": "will", "implementation": "neg_exist"}