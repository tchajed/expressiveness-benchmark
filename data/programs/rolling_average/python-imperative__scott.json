{"task": "rolling_average", "language": "python-imperative", "plan": {"windows": [{"line": 3, "start": 2, "end": 34}, {"line": 2, "start": 2, "end": 13}, {"line": 10, "start": 4, "end": 18}, {"line": 11, "start": 6, "end": 23}, {"line": 14, "start": 2, "end": 15}], "group": [{"line": 6, "start": 4, "end": 30}, {"line": 7, "start": 6, "end": 36}, {"line": 8, "start": 8, "end": 13}, {"line": 1, "start": 2, "end": 36}, {"line": 4, "start": 4, "end": 23}], "filter": [{"line": 9, "start": 6, "end": 39}, {"line": 5, "start": 4, "end": 25}, {"line": 12, "start": 7, "end": 31}]}, "source": "def rolling_average(data):\n  data.sort(key=lambda v: v[\"time\"])\n  result = []\n  for i, value in enumerate(data):\n    end = value[\"time\"]\n    total, count = 0.0, 0\n    for j in range(i, -1, -1):\n      if data[j][\"time\"] <= end - 7:\n        break\n      total += data[j][\"x\"]; count += 1\n    result.append(\n      {\"end_time\": end,\n       \"average\": total / count}\n    )\n  return result", "author": "scott", "implementation": ""}