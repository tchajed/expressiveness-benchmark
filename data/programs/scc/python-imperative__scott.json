{"task": "scc", "language": "python-imperative", "plan": {}, "source": "def scc(graph, query):\n  reachable = set()\n  vertices = set()\n  for edge in graph:\n    reachable.add((edge[\"source\"], edge[\"target\"]))\n    vertices.add(edge[\"source\"])\n    vertices.add(edge[\"target\"])\n  changed = True\n  while changed:\n    changed = False\n    for edge in graph:\n      for vertex in vertices:\n        if ((edge[\"source\"], vertex) not in reachable\n            and (edge[\"target\"], vertex) in reachable):\n          changed = True\n          reachable.add((edge[\"source\"], vertex))\n  source = query[0][\"source\"]\n  result = []\n  for vertex in vertices:\n    if ((source, vertex) in reachable and\n        (vertex, source) in reachable):\n      result.append(vertex)\n  return result", "author": "scott", "implementation": ""}