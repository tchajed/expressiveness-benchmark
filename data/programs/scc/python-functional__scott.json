{"task": "scc", "language": "python-functional", "plan": {}, "source": "def scc(graph, query):\n    def step(relation):\n        return set([\n            (source, edge[\"target\"])\n            for (source, target) in relation\n            for edge in graph\n            if target == edge[\"source\"]\n        ]).union(relation)\n\n    def fix(f, x):\n        next = f(x)\n        return x if next == x else fix(f, next)\n\n    source = query[0][\"source\"]\n    init = set([(edge[\"source\"], edge[\"target\"]) for edge in graph])\n    reachable = fix(step, init)\n    return list(set([v for (_, v) in reachable\n      if (v, source) in reachable and (source, v) in reachable]))", "author": "scott", "implementation": ""}