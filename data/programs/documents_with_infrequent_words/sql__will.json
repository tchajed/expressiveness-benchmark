{"task": "documents_with_infrequent_words", "language": "sql", "plan": {"word": [{"line": 3, "start": 0, "end": 42}, {"line": 4, "start": 2, "end": 52}, {"line": 5, "start": 0, "end": 51}, {"line": 6, "start": 0, "end": 51}], "documents": [{"line": 8, "start": 0, "end": 18}, {"line": 9, "start": 0, "end": 5}, {"line": 10, "start": 2, "end": 11}, {"line": 11, "start": 2, "end": 12}, {"line": 14, "start": 26, "end": 38}, {"line": 12, "start": 2, "end": 23}, {"line": 13, "start": 3, "end": 13}, {"line": 16, "start": 2, "end": 44}, {"line": 17, "start": 2, "end": 36}, {"line": 18, "start": 2, "end": 36}, {"line": 19, "start": 2, "end": 25}, {"line": 15, "start": 0, "end": 5}], "frequency": [{"line": 14, "start": 3, "end": 24}]}, "source": "-- NOTE: SQLite tokenize is case-insensitive by default, \n-- so this solution is NOT exactly like the others\n\nCREATE VIRTUAL TABLE doc_index USING fts4(\n  text, id, content=documents, tokenize=simple);    \nINSERT INTO doc_index(doc_index) VALUES('rebuild');\nCREATE VIRTUAL TABLE words USING fts4aux(doc_index);    \n\nSELECT DISTINCT id\nFROM \n  documents\n  CROSS JOIN\n  (SELECT DISTINCT term\n   FROM words\n   WHERE occurrences = 1) unique_words\nWHERE\n  (LOWER(text) LIKE '% ' || term || ' %') OR\n  (LOWER(text) LIKE term || ' %') OR\n  (LOWER(text) LIKE '% ' || term) OR\n  (LOWER(text) LIKE term)", "author": "will", "implementation": ""}