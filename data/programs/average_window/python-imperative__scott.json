{"task": "average_window", "language": "python-imperative", "plan": {"key": [{"line": 1, "start": 2, "end": 20}, {"line": 2, "start": 4, "end": 40}], "output_order": [{"line": 5, "start": 2, "end": 36}], "group by": [{"line": 9, "start": 2, "end": 24}, {"line": 10, "start": 4, "end": 31}, {"line": 11, "start": 4, "end": 37}, {"line": 7, "start": 2, "end": 34}, {"line": 3, "start": 2, "end": 19}, {"line": 4, "start": 4, "end": 13}], "average": [{"line": 12, "start": 6, "end": 34}, {"line": 13, "start": 6, "end": 54}, {"line": 8, "start": 2, "end": 32}, {"line": 6, "start": 2, "end": 13}, {"line": 14, "start": 4, "end": 23}, {"line": 15, "start": 4, "end": 14}, {"line": 17, "start": 2, "end": 15}, {"line": 16, "start": 2, "end": 30}]}, "source": "def average_window(data):\n  def window(value):\n    return math.floor(value[\"time\"] / 7)\n  if len(data) < 1:\n    return []\n  data.sort(key=lambda v: v[\"time\"])\n  result = []\n  current_window = window(data[0])\n  total, count = data[0][\"x\"], 1\n  for value in data[1:]:\n    time_window = window(value)\n    if time_window != current_window:\n      result.append(total / count)\n      current_window, total, count = time_window, 0, 0\n    total += value[\"x\"]\n    count += 1\n  result.append(total / count)\n  return result", "author": "scott", "implementation": ""}