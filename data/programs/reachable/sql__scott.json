{"task": "reachable", "language": "sql", "plan": {"step": [{"line": 2, "start": 0, "end": 43}, {"line": 4, "start": 0, "end": 33}, {"line": 5, "start": 2, "end": 41}, {"line": 6, "start": 2, "end": 30}], "source": [{"line": 9, "start": 14, "end": 37}, {"line": 11, "start": 0, "end": 37}], "edge_sequence": [{"line": 4, "start": 2, "end": 34}, {"line": 7, "start": 2, "end": 41}], "edge_match": [{"line": 8, "start": 2, "end": 30}], "vertices": [{"line": 6, "start": 2, "end": 33}, {"line": 1, "start": 0, "end": 23}, {"line": 2, "start": 2, "end": 34}, {"line": 3, "start": 2, "end": 7}, {"line": 5, "start": 2, "end": 7}, {"line": 6, "start": 2, "end": 8}, {"line": 5, "start": 2, "end": 7}, {"line": 6, "start": 2, "end": 33}, {"line": 5, "start": 2, "end": 7}, {"line": 10, "start": 0, "end": 33}]}, "source": "WITH RECURSIVE\nclosure(source, target) AS (\n  SELECT source, source FROM graph\n  UNION\n  SELECT source, target FROM graph\n  UNION\n  SELECT edge.source, path.target\n  FROM closure as path JOIN graph as edge\n  ON edge.target = path.source\n)\nSELECT S.target FROM closure as S\nJOIN query ON S.source = query.source", "author": "scott", "implementation": ""}