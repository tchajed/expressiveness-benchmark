{"task": "reachable", "language": "python-functional", "plan": {"halt": [{"line": 11, "start": 15, "end": 29}], "step": [{"line": 1, "start": 4, "end": 22}, {"line": 2, "start": 8, "end": 20}, {"line": 3, "start": 12, "end": 26}, {"line": 4, "start": 12, "end": 33}, {"line": 5, "start": 12, "end": 29}, {"line": 6, "start": 12, "end": 39}, {"line": 7, "start": 8, "end": 25}, {"line": 14, "start": 20, "end": 24}, {"line": 10, "start": 8, "end": 19}], "source": [{"line": 14, "start": 26, "end": 39}, {"line": 13, "start": 4, "end": 31}]}, "source": "def reachable(graph, query):\n    def step(visited):\n        return set([\n            edge[\"target\"]\n            for vertex in visited\n            for edge in graph\n            if vertex == edge[\"source\"]\n        ]).union(visited)\n\n    def fix(f, x):\n        next = f(x)\n        return x if next == x else fix(f, next)\n\n    source = query[0][\"source\"]\n    return list(fix(step, set([source])))", "author": "scott", "implementation": ""}