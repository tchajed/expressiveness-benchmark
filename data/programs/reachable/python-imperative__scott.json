{"task": "reachable", "language": "python-imperative", "plan": {}, "source": "def reachable(graph, query):\n  adjacency_list = defaultdict(list)\n  for edge in graph:\n    adjacency_list[edge[\"source\"]].append(edge[\"target\"])\n  source = query[0][\"source\"]\n\n  visited = set()\n  to_visit = set([source])\n    \n  while len(to_visit) > 0:\n    current = to_visit.pop()\n    if current in visited:\n      continue\n    for neighbor in adjacency_list[current]:\n      to_visit.add(neighbor)\n    visited.add(current)\n            \n  return list(visited)", "author": "scott", "implementation": ""}