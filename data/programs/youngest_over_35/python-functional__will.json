{"task": "youngest_over_35", "language": "python-functional", "plan": {"filter": [{"line": 1, "start": 2, "end": 48}], "min": [{"line": 2, "start": 2, "end": 63}], "name": [{"line": 3, "start": 9, "end": 25}]}, "source": "def youngest_over_35(people):\n  over_35 = [p for p in people if p['age'] > 35]\n  youngest = min(over_35, default=None, key=lambda p: p['age'])\n  return youngest['name'] if youngest is not None else None", "author": "will", "implementation": ""}